#!/bin/bash
# git-smart.sh - Git workflow th√¥ng minh HO√ÄN CH·ªàNH
# S·ª≠ d·ª•ng: ./git-smart.sh [commit_message]

set -e

REPO_NAME="4t-task"
GITHUB_USER="Chunn241529"
REMOTE="origin"
BRANCH_MAIN="main"

# 1. T·∫†O CONFIG GIT (T·ª∞ ƒê·ªòNG)
setup_config() {
    if ! git config user.name &>/dev/null; then
        echo "üë§ Nh·∫≠p t√™n:"
        read -r user_name
        git config --global user.name "$user_name"

        echo "üìß Nh·∫≠p email:"
        read -r user_email
        git config --global user.email "$user_email"
        echo "‚úÖ Config git ho√†n t·∫•t"
    else
        echo "‚úÖ Config git ƒë√£ c√≥"
    fi
}

# 2. T·∫†O REPOSITORY N·∫æU CH∆ØA C√ì
init_repo() {
    if [[ ! -d ".git" ]]; then
        git init
        echo "# $REPO_NAME" > README.md
        git add README.md
        git commit -m "Initial commit"

        # T·∫†O GITHUB REPO T·ª∞ ƒê·ªòNG
        if ! curl -s "https://github.com/$GITHUB_USER/$REPO_NAME" | grep -q "404"; then
            echo "‚úÖ Repo GitHub ƒë√£ t·ªìn t·∫°i"
        else
            echo "üöÄ T·∫°o repo GitHub..."
            xdg-open "https://github.com/new?repo=$REPO_NAME"
            echo "   ‚¨ÜÔ∏è T·∫°o xong th√¨ Enter ƒë·ªÉ ti·∫øp t·ª•c"
            read
        fi

        git remote add $REMOTE "https://github.com/$GITHUB_USER/$REPO_NAME.git"
        git push -u $REMOTE $BRANCH_MAIN
        echo "‚úÖ Repository local + GitHub OK"
    fi
}

# 3. COMMIT
do_commit() {
    local msg="${1:-Auto commit $(date '+%Y-%m-%d %H:%M')}"
    if ! git diff --quiet; then
        git add .
        git commit -m "$msg"
        echo "‚úÖ ƒê√£ commit: $msg"
    else
        echo "‚ö†Ô∏è  Kh√¥ng c√≥ thay ƒë·ªïi"
    fi
}

# 4. PUSH
do_push() {
    git push $REMOTE $(git branch --show-current)
    echo "‚úÖ ƒê√£ push"
}

# 5. T·∫†O BRANCH
create_branch() {
    local branch_name="${1:-feature/$(date '+%Y%m%d-%H%M')}"
    git checkout -b "$branch_name"
    echo "‚úÖ T·∫°o & checkout: $branch_name"
}

# 6. CHECKOUT BRANCH
checkout_branch() {
    local branch_name="$1"
    if git branch | grep -q "$branch_name"; then
        git checkout "$branch_name"
        echo "‚úÖ Checkout: $branch_name"
    else
        echo "‚ùå Branch kh√¥ng t·ªìn t·∫°i"
        exit 1
    fi
}

# 7. MERGE
do_merge() {
    local target_branch="${1:-$BRANCH_MAIN}"
    local current_branch=$(git branch --show-current)

    if [[ "$current_branch" != "$target_branch" ]]; then
        git checkout "$target_branch"
        git merge "$current_branch" --no-ff -m "Merge '$current_branch'"
        git push $REMOTE $target_branch
        echo "‚úÖ Merge $current_branch ‚Üí $target_branch"
    else
        echo "‚ö†Ô∏è  ƒê√£ ·ªü branch ƒë√≠ch"
    fi
}

# FULL WORKFLOW THEO TH·ª® T·ª∞
main() {
    setup_config
    init_repo
    do_commit "$1"
    do_push
    create_branch "$2"
    echo "üéâ Ho√†n t·∫•t workflow!"
    echo "üìÇ https://github.com/$GITHUB_USER/$REPO_NAME"
}

# CH·∫†Y
main "$@"
